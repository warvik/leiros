// @file
// Custom sass mixins
//
// Define the custom mixins for your project here.
// http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#defining_a_mixin

// Makes an element visually hidden, but accessible.
// @see http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
@mixin element-invisible {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    clip: rect(1px 1px 1px 1px); // IE6 and IE7 use the wrong syntax.
  }
  clip: rect(1px, 1px, 1px, 1px);
}

// Turns off the element-invisible effect.
@mixin element-invisible-off {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto;
}

// Makes an element visually hidden by default, but visible when focused.
@mixin element-focusable {
  @include element-invisible;

  &:active,
  &:focus {
    @include element-invisible-off;
  }
}

// http://retinajs.com/
//
// retina.scss - https://github.com/michaelsacca/retinajs-for-compass-sass-less
// Defaults to png but can be overwritten to jpg or gif
// $image name is equal to the image name with out it's extention - 'example.png' would be defined as 'example'
// A helper mixin for applying high-resolution background images (http://www.retinajs.com)
@mixin at2x($image_name, $w: auto, $h: auto, $extention: '.png') {
  background-image: image_url($image_name + $extention);
  $x2img : $image_name + '@2x' + $extention;

  @media
    all and (-webkit-min-device-pixel-ratio : 1.5),
    all and (   min--moz-device-pixel-ratio: 2),
    all and (     -o-min-device-pixel-ratio: 2/1),
    all and (        min-device-pixel-ratio: 2),
    all and (                min-resolution: 192dpi),
    all and (                min-resolution: 2dppx){
    background-image: image_url($x2img);
    background-size: $w $h;
  }
}
